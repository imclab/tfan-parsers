2010.02.10 15:14
The StaibDat class attempts to import data and metadata from the ASCII .dat files generated by winspectro. The resulting StaibDat object acts like a python dictionary. The fact that the Staib .dat files have no documented structure presents a challenge in programming such a class. This document lists the assumptions I made about the structure of the Staib .dat files, it presents a list of tests that can be performed to verify that a .dat file conforms to the structure, and it describes what the StaibDat class does to import data and metadata.


== Structure of Staib winspectro .dat files. ==
It appears that the text files winspectro exports have three man sections in the following order: metadata, reserved, and data. These sections are always in that order, and are never interleaved. The metadata section has two strings which are separated by a colon followed by four spaces (":    "). There is one and only one colon and whitespace separator in the metadata section. The reserved section is simply the text, "reserved", on a line by itself. The data section contains columns of data separated by whitespace. Additionally, the first line of the data section has labels for each of the columns, while the following lines have only values. The data section has one and only one labels line which is never interleaved with the values of data. The data section appears to have exactly three columns. All of the data values appear to be integers.

Some of the metadata lines have units which are enclosed in brackets ([,]). Additionally, the label for the first column in the data section has a unit, but the other two labels do not.

There are some metadata lines that quantitatively describe the data. For example, there are metadata lines named "Startenergy[V]", "Stopenergy [V]", "Stepwidth", and "Data Points". These lines could be used to verify the structure and validity of the winspectro file.


== Tests to verify winspectro files. ==
* The metadata section should come first, followed by the reserved section, followed by the data section.
* There should not be any lines that don't conform to the known three sections.
* There should be one and only one line with labels for the data. That line should appear first in the data section.
* The number of data lines in the data section should equal the value of the "Data Points" line in the metadata section.
* The first Basis value in the data section should almost precisely agree with the "Startenergy[V]" value in the metadata section.
* The final Basis value in the data section should almost precisely agree with the "Stop energy[V]" value in the metadata section.
* The step size between all the Basis values in the data section should be equal.
* The step size between all the Basis values in the data section should almost precisely agree with the "Stepwidth" value in the metadata section.


== How the StaibDat class works ==
Before any parsing is done, the StaibDat class will verify that the overall structure of the data file is legitimate or otherwise raise an exception. The winspectro data files will be parsed line-by-line. The keys of the StaibDat object will be taken from the appropriate part of the .dat file, explained below. The value of the keys will also be taken from the appropriate part of the .dat file. Once the data has been imported, the StaibDat object will check to see if the data is internally consistant according to the tests listed above.

Here's how the various parts of the file will be handled.

metadata:
The StaibDat object will split the lines on the colon and whitespace, where the string on the left is the dictionary key, and the string on the right is the dictionary value. The StaibDat object will strip any extra whitespace before or after of the key string. Also, the StaibDat object will remove any whitespace in the middle of the key string and compress the remaining text together. The StaibDat object will strip any whitespace before or after the value string also. Some of the metadata lines have either implicit or explicit units. For those lines that don't have units, the StaibDat object will add the key string as the dictionary key and the value string as the dictionary value.

Metadata keys have explicit units if the last characteris contain brackets enclosing a string, e.g. [V]. The StaibDat object will break off this unit from the key string leaving only a string that can be legitimately used as a dictionary key. Some metadata keys have implicit units defined by me. The StaibDat object will include these units. See the source for more details.

For the metadata lines with units, the StaibDat object will use the key string as the dictionary key, but for the the dictionary value, the StaibDat object will use a dictionary with two elements: "value" and "unit". The metadata value and unit will be placed in this dictionary.

reserved:
Any lines in the reserved section of the data file will be skipped.

data:
The data block of the file appears to have three columns with some preceding whitespace. The columns are separated by additional whitespace. The first line of the data has a set of labels, where the first label has an explicit unit [mV]. The StaibDat object will make three key-value pairs in the dictionary for the data, one for each column. The dictionary key will be one of the data labels, sans unit. The value for each key will also be a two-element dictionary: value and unit. The unit for the "Basis" column will be [mV], and the unit for the other columns are [counts]. The data will be stored as an array with the value key.
